FROM golang:1.21-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go.mod and go.sum first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o booking-service .

# Create final lightweight image
FROM alpine:3.18

WORKDIR /app

# Install CA certificates for HTTPS connections
RUN apk --no-cache add ca-certificates

# Copy the binary from builder
COPY --from=builder /app/booking-service .

# Create directory for config files if needed
RUN mkdir -p /app/config

# Set environment variables
ENV PORT=8082 \
    MONGODB_URI=mongodb://mongodb:27017 \
    MONGODB_DATABASE=bookingdb \
    REDIS_URL=redis:6379

# Expose the port
EXPOSE 8082

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget -qO- http://localhost:8082/health || exit 1

# Run the service
CMD ["./booking-service"]